{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/duncan/Downloads/Custom-Menu-main/components/register.js\";\n\nimport React, { useState, useLayoutEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Input, Button, Text } from \"react-native-elements\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { auth } from \"./../firebase\";\n\nvar register = function register(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var register = function register() {\n    auth.createUserWithEmailAndPassword(email, password).then(function (authUser) {\n      authUser.user.updateProfile({\n        displayName: name\n      });\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerBackTitle: \"go to login\"\n    });\n  }, [navigation]);\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    style: \"light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    h3: true,\n    style: {\n      marginBottom: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Create an account\"), React.createElement(View, {\n    style: styles.registerContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Name\",\n    type: \"text\",\n    value: name,\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Email\",\n    type: \"email\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Password\",\n    type: \"password\",\n    secureTextEntry: true,\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    raised: true,\n    onPress: register,\n    title: \"Register\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default register;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  registerContainer: {\n    width: 300\n  }\n});","map":{"version":3,"sources":["/home/duncan/Downloads/Custom-Menu-main/components/register.js"],"names":["React","useState","useLayoutEffect","Input","Button","Text","StatusBar","auth","register","navigation","name","setName","email","setEmail","password","setPassword","createUserWithEmailAndPassword","then","authUser","user","updateProfile","displayName","catch","error","alert","message","setOptions","headerBackTitle","styles","container","marginBottom","registerContainer","text","StyleSheet","create","flex","display","alignItems","justifyContent","width"],"mappings":"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","sourcesContent":["import React, { useState, useLayoutEffect } from \"react\";\nimport { StyleSheet, View, KeyboardAvoidingView } from \"react-native\";\nimport { Input, Button, Text } from \"react-native-elements\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { auth } from \"./../firebase\";\n\nconst register = ({ navigation }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const register = () => {\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((authUser) => {\n        authUser.user.updateProfile({\n          displayName: name\n        });\n      })\n      .catch((error) => alert(error.message));\n  };\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerBackTitle: \"go to login\",\n    });\n  }, [navigation]);\n\n  return (\n    <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n      <StatusBar style=\"light\" />\n      <Text h3 style={{ marginBottom: 50 }}>\n        Create an account\n      </Text>\n      <View style={styles.registerContainer}>\n        <Input placeholder=\"Name\" type=\"text\" value={name} onChangeText={(text) => setName(text)} />\n        <Input\n          placeholder=\"Email\"\n          type=\"email\"\n          value={email}\n          onChangeText={(text) => setEmail(text)}\n        />\n        <Input\n          placeholder=\"Password\"\n          type=\"password\"\n          secureTextEntry\n          value={password}\n          onChangeText={(text) => setPassword(text)}\n        />\n        <Button raised onPress={register} title=\"Register\" />\n      </View>\n    </KeyboardAvoidingView>\n  )\n}\n\nexport default register\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  registerContainer: {\n    width: 300,\n  },\n})\n\n\n"]},"metadata":{},"sourceType":"module"}